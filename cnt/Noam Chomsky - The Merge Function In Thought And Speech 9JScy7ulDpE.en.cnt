that in fact there are design features
of language by design I don't mean
anybody designed it there are just
intrinsic features of the nature of
language that do show that you strongly
and indicate that language is designed
as a system of thought and not as a
system of externalization notice that
communication is a sub case of external
ization so it's not even secondary its
tertiary the plenty of externalization
that isn't communication and there's
nothing special we now know there's
nothing special about the auditory
articulatory mode of externalization so
sign works exactly the same way as far
as anyone knows and could turn up to
work out in other modalities as well
whatever it is it seems to be
independent of sensory modality as the
auditory mode has its advantages and you
could do it in a dark and so on but it
doesn't seem to be intrinsic the
language in any way well let's proceed
what is this mysterious recursive
operation that somehow entered into our
evolutionary history the first
assumption you would make is it's the
simplest one imaginable well what's the
simplest one imaginable any recursive
procedure any algorithm that's going to
create a digital system of digital
infinity is going to have embedded in it
somewhere
an operation that says take two units
that have already been formed and make
up a bigger unit it's somewhere in any
system you're going to find that whether
it's an axiom system or a frigging
ancestral or whatever mode you have for
generating an infinite number of objects
so let's take a look at that operation
let's assume the the initial assumption
certainly is that's the operation that
was provided to some not so remote
ancestor hundred thousand years is not a
long time
from an evolutionary point of view so
some recent ancestor had some rewiring
of the brain which gave them this
operation call the operation merge takes
two objects already constructed forms a
new one
well we'd want it to work in the
simplest but we'd assumed that it would
work in the simplest possible way the
simplest possible way would mean that
the two are the two there so another way
I won't bother writing it but suppose
you have x and y you form a new object
call it Z okay the most simple
assumption is that x and y are not
changed by the operation that's the
minimal amount of computation okay
they're not changed by the operation
that's called the no tampering condition
it's an elementary principle of
efficient computation you want to put
two things together don't change them
that me and furthermore don't order them
because ordering them is more complex
than leaving them on order okay what
that means is that when you merge x and
y you just get the set XY period okay
that's the simplest operation so
presumably that we start by assuming
that that's the only operation if we're
forced to we'll add more complexity but
that's the minimal form of universal
grammar you have a perfectly functioning
operation merge well if you think about
it there are two possible kinds of merge
we see that right away let me write it
okay yeah so suppose we we had X&Y we
want to merge them in the simplest
possible way and that will be the set X
Y okay so for example in a linguistic
case we have whatever that sentence was
say tense and swim and we have already
say picked these out of the lexicon and
we merge them and we get set and swim we
add eagles on here and we get this okay
there are two kinds of merge just as a
matter of logic one of them will work
like this you take two things that are
formed stick them together don't change
either of them that's called external
merge the two things that you put
together eagles and this are separate
from one another they're distinct from
one another that's one possibility the
other possibility is they're not
distinct from one another that's logic
well let's say this one is can suppose
we merge can with this whole thing
that's the case where they're not
distinct from one another well then we
get can eagles can swim okay that one's
called internal merge and those are the
two kinds I mean if you think about the
process of generation there aren't any
other kinds you can't get overlapping
sets
there's no way to construct by this
operation so either the two things are
totally separate from one another or one
is contained within the other well if
it's contained within the other this one
then you get two copies of this
that appears twice okay that's the
simplest possible operation you can only
block it by stipulation you'd have to
add something to universal grammar to
say you can't do it okay now there are
lots of approaches to formation of these
constructions that are you know HB s g
LF g those of you know the literature
which add complex operations but they
face two problems one problem is why do
they bar the automatically available
operation that's a stipulation second
why do they add the other operations now
I don't think either those questions can
be answered so therefore as far as I can
see the other approaches just aren't you
know in competition they just involved
too many stipulations now that is
there's a historical reason why that's
done this but no we can forget it we
should forget it
the historical reason is that external
merge was taken for granted was assumed
to be just available internal merge
which was called transformations was
considered to be by meet to to be
considered is considered to be something
extra you know something you have to add
on because that's the way language seems
to work and therefore there were many
efforts to try to get rid of it but when
you think about it you don't have to get
rid of it it's automatic now if you take
a look at the history of modern
linguistics since the 1950s a major
effort has been to cut back universal
grammar to try to show that it's not as
rich in complexes was assumed through
the 1960 remand transformational grammar
through the 1950s traced earth through
the 1960
what do I do okay sorry through the
1960s for a structure grammar was kind
of whittled away it has many
stipulations and complexities but they
were sort of the ways were thought of
trying to overcome them that led to
what's called x-bar theory which
essentially eliminated phrase structure
grammar pretty much you could make
further steps but got rid of a lot of it
in the 60s and on there were efforts to
whittle away at the complexity of
transformational grammar and they
reached the considerable success by say
the 1980s say had two systems but simple
ones simpler ones the next question was
can we reduce them to the same operation
well that turns out to be possible in
fact necessary namely merge they're
reduced to the same operation okay now
you've reached the limit you know aside
from things you don't understand which
is enormous
you've reached the limit of what can be
done to reduce Universal grammar to its
absolute minimum you can get away with
this that's the absolute minimum to get
away with it of course you have to show
that everything else follows
and that you can solve the property
poverty of stimulus problems well that's
that looks right and we now have you
know notice something that in the
internal merge case you pronounce the
structurally highest element but you
don't pronounce the structurally lowest
element well actually there's an economy
reason for that too the pronunciation
aspect first of all the notice that the
what's given by internal merge is
exactly correct for the semantics for
the semantics for the thought systems
you do want to know that that element
appears in two positions it gets its
semantic interpretation from the
original position it gets its
interpretation as a forming question
from its derived position and that's and
you only pronounce the
hire one well that you find all over the
place so take a different kind of case
consider the first and most famous and
most honored suicide bomber his name is
Samson according to the Bible Samson was
killed voluntarily that is he chose to
be killed and it was his great
achievement he killed more Philistines
in his death in his entire lifetime
so he's the archetypical suicide bomber
and highly honored but notice that the
words we have the same problem the same
configuration here that we had in the
yes or no question the word Samson is
heard it's pronounced only in the
hierarchically highest position but it's
interpreted in another position namely
the position which I indicated just by a
slash by a bar it's interpreted as the
object of kill okay so something killed
him it gets its semantic role and and
that would be a position of external
merge but the raised position the
position of the actual sentence is one
of it's gotten by internal merged
leaving two copies and notice that it
gets a semantic role in both positions
in its original position it's understood
as the object of kill in its raised
position it's it's the subject of the
predicate voluntarily it's being killed
that was voluntary okay so it gets to
two semantic roles and they're different
in care
one of them is called a theta roll what
not doesn't matter it's getting to
semantic roles in two positions the
internal merge is giving exactly the
right structure for thought but the
wrong structure for pronunciation in
both the yes or no question in this case
the pronunciation is different why is it
different well there is an economy
principle simple one articulation is a a
costly operation takes a lot of brain
energy and takes a lot of articulatory
energy and you want to do as little of
it as possible for economy reasons okay
so we have two economy principles one
that gives the two copies one that
doesn't print out that only pronounces
one of them I'm you have to pronounce
one of them otherwise you don't hear
that anything happened and it has to be
the hierarchically highest one otherwise
there's no indication that the operation
took place so the minimal computational
operations will say construct the
sentences by internal merge yielding the
semantically appropriate conclusions
that's fine for the language of thought
but then when you map it on to the
sensorimotor system just pronounce the
highest the highest one okay there's
some interesting marginal exceptions to
this and there's an interesting
literature about them but I'll put that
aside
the exceptions are mode are pretty well
motivated but the core principle is this
and it's just universal all over the
place and language all languages well
there's a consequence pronouncing only
one yields perceptual problems you have
to figure out where where's the other
one those of you who've worked on
parsing programs or perceptual models
know that that's a very serious problem
in fact it's the core problem in parsing
it's called a filler gap problem you
hear the word wat in the front of a
sentence and you got to figure out where
it's coming from
that's the major parsing problem and
similarly perceptual
and it's a very it's a these are trivial
sentences but when you get more
complicated sentences it's a very hard
problem and it turns out that they're
copies all over the place and they all
enter into semantic interpretation but
you don't here am i so you get real
problems of interpretation well if you
notice that's a problem of conflict
between computational efficiency and
communicative efficiency the communicate
efficiency would be far easier if you
pronounced everything okay
computational efficiency is a better if
you if you browse only one well
computational efficiency wins in the
conflict hundred percent and furthermore
it's ubiquitous it's true for all other
constructions and all of the languages
well what do we conclude from that we
conclude that the actual design of
language the way it's sort of put
together is for the purposes of semantic
interpretation and computational
efficiency communicative efficiency is
sacrificed which makes sense if that's a
secondary process and something comes
along later okay we do it in some
complicated way well there are many
other examples of this so for example
ambiguities there are lots of ambiguous
constructions structurally ambiguous
constructions as far as we understand
they're all anything we understand it's
generated by just letting the rules run
free you let the rules run free you get
ambiguity that's bad for perception and
parsing there's a category of expression
school garden path sentences it's the
same they are generated when you just
let the rules run free but they yield
problems in perception and parsing a
more interesting case which is only
partially understood or is what called
islands there are certain expressions
which you can think but you can't say
like if you have the sentence
I wonder how John fixed the car or
something you can question the car and
ask which card did you wonder whether
John fixed may be awkward but
intelligible on the other hand you can't
question John you can't say who do you
wonder how fixed the car perfectly good
meaning you know so you can think it but
just can't say it just find some
circumlocution to express that thought
okay that's an island now as far as we
understand islands and it's limited they
seemed to come from satisfying
conditions of computational efficiency
but they yield communicative
inefficiency actually in efficiency even
an ability to express your thoughts so
it's another kind of conflict that this
is a research area a lot of open
questions here but an interesting ones
but it where we understand anything it
looks as though computational efficiency
wins out automatically over
communicative efficiency which is not a
not a relevant topic Mike
0
2
5
7
9
15
19
21
24
27
29
33
35
37
39
42
45
48
50
52
56
59
62
63
66
71
76
79
81
84
87
90
93
95
96
100
103
106
108
110
113
116
119
121
124
127
130
131
133
136
138
142
145
145
148
150
153
155
158
159
163
166
169
172
174
176
179
181
184
186
189
192
194
197
201
204
207
210
212
214
218
223
227
241
250
254
258
264
267
275
277
283
293
295
298
303
305
308
312
315
317
320
321
324
329
333
335
338
347
352
355
356
358
359
361
364
366
368
371
374
378
382
385
387
390
393
396
400
403
407
409
413
416
418
420
423
427
429
432
437
438
440
445
448
451
453
455
457
458
461
463
465
468
471
474
477
480
483
492
499
500
507
511
513
516
519
521
522
525
527
529
534
536
538
541
544
548
550
553
556
559
562
563
564
566
569
572
574
575
577
579
583
587
589
592
595
597
599
604
606
609
612
614
617
620
623
625
628
632
633
636
640
645
648
678
681
683
685
687
690
695
698
700
704
708
711
714
716
721
724
727
729
733
736
738
741
744
748
751
755
759
762
765
767
768
771
774
776
779
782
785
789
791
795
800
802
804
808
811
814
816
818
820
822
824
827
832
837
840
842
844
847
849
852
854
855
857
858
860
863
867
871
875
878
881
884
886
888
892
895
896
898
899
902
903
905
907
910
912
914
916
919
923
924
927
931
933
936
939
942
945
948
950
953
956
958
961
965
967
970
973
976
978
981
983
986
989
991
994
995
998
1001
1004
1007
1011
1013
1016
1018
1020
1023
1026
1029
1036
1039
1042
1045
1047
1051
1055
1057
1059
1062
1064
1067
1070
1072
1075
1078
1081
1083
1085
1088
1091
1094
1097
1099
